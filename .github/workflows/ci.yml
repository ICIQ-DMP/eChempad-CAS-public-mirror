name: ci

# Trigger event on every push / delete event, only in master branch
on:
  push:
  delete:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/echempad-cas:latest

  mirror:
    needs: build
    runs-on: ubuntu-latest
    steps: # <-- must use actions/checkout before mirroring!
      - uses: actions/checkout@v3
        with:
          lfs: 'true'
      - name: checkoutLFS
        uses: actions/checkout@v2                       # <-- Do checkout of LFS elements
      - run: git lfs fetch --all
      - run: git lfs pull
      - run: git lfs pull origin
      - run: git fetch --unshallow
      - run: mkdir -p ~/.ssh
      - run: touch ~/.ssh/config
      - run: echo 'Host *' | tee -a ~/.ssh/config
      - run: echo 'ServerAliveInterval 30' | tee -a ~/.ssh/config
      - run: echo 'ServerAliveCountMax 1200' | tee -a ~/.ssh/config
      - run: echo 'TCPKeepAlive yes' | tee -a ~/.ssh/config
      - run: git lfs fetch --all
      - run: git lfs pull
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            git@github.com:ICIQ-DMP/eChempad-CAS-public-mirror
          ssh_private_key: # <-- use 'secrets' to pass credential information.
            ${{ secrets.GITLAB_SSH_PRIVATE_KEY }}       # <-- the corresponding public key is also stored in github, not only gitlab, so they can use the same private token


  deploy:
    needs: build
    runs-on: [ self-hosted ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download docker-compose.yml
        run: mv docker-compose.ci.yml docker-compose.yml

      - name: Stop eChempad cas container
        run: docker-compose down

      - name: Force pulling of the images or they would not be updated
        run: docker-compose pull

      - name: Create directory for secrets.properties file
        run: mkdir -p /etc/cas/config/

      - name: Create secrets file from GitHub secrets
        run: |
          echo "# THIS FILE IS SECRET, DO NOT UPLOAD TO VERSION CONTROL!" >> /etc/cas/config/secrets.properties
          echo "" >> /etc/cas/config/secrets.properties
          echo "## Encryption and keys" >> /etc/cas/config/secrets.properties
          echo "# Encryption key of size 512 for Ticket-granting Cookie" >> /etc/cas/config/secrets.properties
          echo "cas.tgc.crypto.encryption.key=${{ secrets.TGC_ENCRYPTION }}" >> /etc/cas/config/secrets.properties
          echo "# Signing key of size 512 for Ticket-granting Cookie" >> /etc/cas/config/secrets.properties
          echo "cas.tgc.crypto.signing.key=${{ secrets.TGC_SIGNING }}" >> /etc/cas/config/secrets.properties
          echo "# Signing key of size 512 for webflow" >> /etc/cas/config/secrets.properties
          echo "cas.webflow.crypto.signing.key=${{ secrets.WEBFLOW_SIGNING }}" >> /etc/cas/config/secrets.properties
          echo "# Secret key for encryption of size 16" >> /etc/cas/config/secrets.properties
          echo "cas.webflow.crypto.encryption.key=${{ secrets.WEBFLOW_ENCRYPTION }}" >> /etc/cas/config/secrets.properties
          echo "" >> /etc/cas/config/secrets.properties
          echo "## External services" >> /etc/cas/config/secrets.properties
          echo "# LDAP password" >> /etc/cas/config/secrets.properties
          echo "cas.authn.ldap[0].bindCredential=${{ secrets.LDAP_PASSWORD }}" >> /etc/cas/config/secrets.properties
          echo "# ORCID password" >> /etc/cas/config/secrets.properties
          echo "cas.authn.pac4j.oauth2[0].secret=${{ secrets.ORCID_PASSWORD }}" >> /etc/cas/config/secrets.properties

      - name: restart eChempad cas container with new image
        run: docker-compose up -d